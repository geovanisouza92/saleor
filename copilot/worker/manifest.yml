# The manifest for the "worker" service.
# Read the full specification for the "Worker Service" type at:
# https://aws.github.io/copilot-cli/docs/manifest/worker-service/

# Your service name will be used in naming your resources like log groups, ECS services, etc.
name: worker
type: Worker Service

# Configuration for your containers and service.
image:
  # Docker build arguments.
  build: Dockerfile

cpu: 256       # Number of CPU units for the task.
memory: 512    # Amount of memory in MiB used by the task.
count: 0       # Number of tasks that should be running in your service.
exec: true     # Enable running commands in your container.

# You can register to topics from other services.
# The events can be be received from an SQS queue via the env var $COPILOT_QUEUE_URI.
# subscribe:
#   topics:
#     - name: topic-from-another-service
#       service: another-service

subscribe:
  queue:
    dead_letter:
      tries: 3

# Optional fields for more advanced use-cases.
#
#variables:                    # Pass environment variables as key value pairs.
#  LOG_LEVEL: info

variables:
  # TODO Xref web bucket
  # MEDIA_URL: !GetAtt [AddonsStack, Outputs.filesBucketURL]
  # STATIC_URL: !GetAtt [AddonsStack, Outputs.filesBucketURL]
  # AWS_STORAGE_BUCKET_NAME: !GetAtt [AddonsStack, Outputs.filesName]
  AWS_QUERYSTRING_AUTH: True
  AWS_LOCATION: uploads

#secrets:                      # Pass secrets from AWS Systems Manager (SSM) Parameter Store.
#  GITHUB_TOKEN: GITHUB_TOKEN  # The key is the name of the environment variable, the value is the name of the SSM parameter.

secrets:
  SECRET_KEY: /copilot/${COPILOT_APPLICATION_NAME}/${COPILOT_ENVIRONMENT_NAME}/secrets/SECRET_KEY
  DATABASE_URL: /copilot/${COPILOT_APPLICATION_NAME}/${COPILOT_ENVIRONMENT_NAME}/secrets/DATABASE_URL
  EMAIL_URL: /copilot/${COPILOT_APPLICATION_NAME}/${COPILOT_ENVIRONMENT_NAME}/secrets/EMAIL_URL
  CELERY_BROKER_URL: /copilot/${COPILOT_APPLICATION_NAME}/${COPILOT_ENVIRONMENT_NAME}/secrets/CELERY_BROKER_URL

# You can override any of the values defined above by environment.
#environments:
#  test:
#    count: 2               # Number of tasks to run for the "test" environment.

environments:
  production:
    count: 1
